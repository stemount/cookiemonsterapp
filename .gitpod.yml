
vscode:
  extensions:
    - ms-azuretools.vscode-docker
    - esbenp.prettier-vscode

# Suspiciously/possibly not really necessary if you want to use the
# Ruby Docker image, not really Ruby inside the container. Might be useful.
# NOTE: This is slow AF, consider using `ruby-full` from Ubuntu upstream.
tasks:
  - name: Update Ubuntu/Debian images for Rubyen
    init: >
      sudo apt update -y &&
      sudo apt install -y git curl libssl-dev libreadline-dev zlib1g-dev \
        autoconf bison build-essential \
        libyaml-dev libreadline-dev libncurses5-dev libffi-dev libgdbm-dev &&
      curl -fsSL https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer | bash &&
      echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc &&
      echo 'eval "$(rbenv init -)"' >> ~/.bashrc &&
      exec $SHELL && rbenv install 3.0.3
    command: rbenv global 3.0.3
  # Comment this in/out.
  - name: Less sussy and faster ideaUpdate Ubuntu/Debian images for Rubyen
    init: >
      sudo apt update -y &&
      sudo apt install -y ruby-full &&
      ruby -v
    command: ruby -v
  # Third time lucky.
  - name: Faster rvm based Ruby-env management.
    init: >
      sudo apt update -y &&
      sudo apt-get install -y curl g++ gcc autoconf automake bison libc6-dev libffi-dev libgdbm-dev \
        libncurses5-dev libsqlite3-dev libtool libyaml-dev make pkg-config \
        sqlite3 zlib1g-dev libgmp-dev libreadline-dev libssl-dev &&
      curl -sSL https://get.rvm.io | bash -s stable --rails &&
      rvm reinstall 3.0.3 &&
      rvm use 3.0.3 &&
      rvm rubygems --force latest &&
      rvm get stable --auto-dotfiles &&
      eval $SHELL
    command: rvm use 3.0.3